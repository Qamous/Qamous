"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-joyride";
exports.ids = ["vendor-chunks/react-joyride"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-joyride/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/react-joyride/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTIONS: () => (/* binding */ ACTIONS),\n/* harmony export */   EVENTS: () => (/* binding */ EVENTS),\n/* harmony export */   LIFECYCLE: () => (/* binding */ LIFECYCLE),\n/* harmony export */   ORIGIN: () => (/* binding */ ORIGIN),\n/* harmony export */   STATUS: () => (/* binding */ STATUS),\n/* harmony export */   \"default\": () => (/* binding */ components_default)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @gilbarbara/deep-equal */ \"(ssr)/./node_modules/@gilbarbara/deep-equal/dist/index.mjs\");\n/* harmony import */ var is_lite__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! is-lite */ \"(ssr)/./node_modules/is-lite/dist/index.mjs\");\n/* harmony import */ var tree_changes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tree-changes */ \"(ssr)/./node_modules/tree-changes/dist/index.mjs\");\n/* harmony import */ var scroll__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! scroll */ \"(ssr)/./node_modules/scroll/index.js\");\n/* harmony import */ var scrollparent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! scrollparent */ \"(ssr)/./node_modules/scrollparent/scrollparent.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var deepmerge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! deepmerge */ \"(ssr)/./node_modules/deepmerge/dist/cjs.js\");\n/* harmony import */ var react_floater__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-floater */ \"(ssr)/./node_modules/react-floater/es/index.js\");\n/* harmony import */ var react_innertext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-innertext */ \"(ssr)/./node_modules/react-innertext/index.js\");\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/literals/index.ts\nvar ACTIONS = {\n  INIT: \"init\",\n  START: \"start\",\n  STOP: \"stop\",\n  RESET: \"reset\",\n  PREV: \"prev\",\n  NEXT: \"next\",\n  GO: \"go\",\n  CLOSE: \"close\",\n  SKIP: \"skip\",\n  UPDATE: \"update\"\n};\nvar EVENTS = {\n  TOUR_START: \"tour:start\",\n  STEP_BEFORE: \"step:before\",\n  BEACON: \"beacon\",\n  TOOLTIP: \"tooltip\",\n  STEP_AFTER: \"step:after\",\n  TOUR_END: \"tour:end\",\n  TOUR_STATUS: \"tour:status\",\n  TARGET_NOT_FOUND: \"error:target_not_found\",\n  ERROR: \"error\"\n};\nvar LIFECYCLE = {\n  INIT: \"init\",\n  READY: \"ready\",\n  BEACON: \"beacon\",\n  TOOLTIP: \"tooltip\",\n  COMPLETE: \"complete\",\n  ERROR: \"error\"\n};\nvar ORIGIN = {\n  BUTTON_CLOSE: \"button_close\",\n  BUTTON_PRIMARY: \"button_primary\",\n  KEYBOARD: \"keyboard\",\n  OVERLAY: \"overlay\"\n};\nvar STATUS = {\n  IDLE: \"idle\",\n  READY: \"ready\",\n  WAITING: \"waiting\",\n  RUNNING: \"running\",\n  PAUSED: \"paused\",\n  SKIPPED: \"skipped\",\n  FINISHED: \"finished\",\n  ERROR: \"error\"\n};\n\n// src/components/index.tsx\n\n\n\n\n\n// src/modules/dom.ts\n\n\nfunction canUseDOM() {\n  var _a;\n  return !!(typeof window !== \"undefined\" && ((_a = window.document) == null ? void 0 : _a.createElement));\n}\nfunction getClientRect(element) {\n  if (!element) {\n    return null;\n  }\n  return element.getBoundingClientRect();\n}\nfunction getDocumentHeight(median = false) {\n  const { body, documentElement } = document;\n  if (!body || !documentElement) {\n    return 0;\n  }\n  if (median) {\n    const heights = [\n      body.scrollHeight,\n      body.offsetHeight,\n      documentElement.clientHeight,\n      documentElement.scrollHeight,\n      documentElement.offsetHeight\n    ].sort((a, b) => a - b);\n    const middle = Math.floor(heights.length / 2);\n    if (heights.length % 2 === 0) {\n      return (heights[middle - 1] + heights[middle]) / 2;\n    }\n    return heights[middle];\n  }\n  return Math.max(\n    body.scrollHeight,\n    body.offsetHeight,\n    documentElement.clientHeight,\n    documentElement.scrollHeight,\n    documentElement.offsetHeight\n  );\n}\nfunction getElement(element) {\n  if (typeof element === \"string\") {\n    try {\n      return document.querySelector(element);\n    } catch (error) {\n      if (true) {\n        console.error(error);\n      }\n      return null;\n    }\n  }\n  return element;\n}\nfunction getStyleComputedProperty(el) {\n  if (!el || el.nodeType !== 1) {\n    return null;\n  }\n  return getComputedStyle(el);\n}\nfunction getScrollParent(element, skipFix, forListener) {\n  if (!element) {\n    return scrollDocument();\n  }\n  const parent = scrollparent__WEBPACK_IMPORTED_MODULE_2__(element);\n  if (parent) {\n    if (parent.isSameNode(scrollDocument())) {\n      if (forListener) {\n        return document;\n      }\n      return scrollDocument();\n    }\n    const hasScrolling = parent.scrollHeight > parent.offsetHeight;\n    if (!hasScrolling && !skipFix) {\n      parent.style.overflow = \"initial\";\n      return scrollDocument();\n    }\n  }\n  return parent;\n}\nfunction hasCustomScrollParent(element, skipFix) {\n  if (!element) {\n    return false;\n  }\n  const parent = getScrollParent(element, skipFix);\n  return parent ? !parent.isSameNode(scrollDocument()) : false;\n}\nfunction hasCustomOffsetParent(element) {\n  return element.offsetParent !== document.body;\n}\nfunction hasPosition(el, type = \"fixed\") {\n  if (!el || !(el instanceof HTMLElement)) {\n    return false;\n  }\n  const { nodeName } = el;\n  const styles = getStyleComputedProperty(el);\n  if (nodeName === \"BODY\" || nodeName === \"HTML\") {\n    return false;\n  }\n  if (styles && styles.position === type) {\n    return true;\n  }\n  if (!el.parentNode) {\n    return false;\n  }\n  return hasPosition(el.parentNode, type);\n}\nfunction isElementVisible(element) {\n  var _a;\n  if (!element) {\n    return false;\n  }\n  let parentElement = element;\n  while (parentElement) {\n    if (parentElement === document.body) {\n      break;\n    }\n    if (parentElement instanceof HTMLElement) {\n      const { display, visibility } = getComputedStyle(parentElement);\n      if (display === \"none\" || visibility === \"hidden\") {\n        return false;\n      }\n    }\n    parentElement = (_a = parentElement.parentElement) != null ? _a : null;\n  }\n  return true;\n}\nfunction getElementPosition(element, offset, skipFix) {\n  var _a;\n  const elementRect = getClientRect(element);\n  const parent = getScrollParent(element, skipFix);\n  const hasScrollParent = hasCustomScrollParent(element, skipFix);\n  let parentTop = 0;\n  let top = (_a = elementRect == null ? void 0 : elementRect.top) != null ? _a : 0;\n  if (parent instanceof HTMLElement) {\n    parentTop = parent.scrollTop;\n    if (!hasScrollParent && !hasPosition(element)) {\n      top += parentTop;\n    }\n    if (!parent.isSameNode(scrollDocument())) {\n      top += scrollDocument().scrollTop;\n    }\n  }\n  return Math.floor(top - offset);\n}\nfunction getScrollTo(element, offset, skipFix) {\n  var _a;\n  if (!element) {\n    return 0;\n  }\n  const { offsetTop = 0, scrollTop = 0 } = (_a = scrollparent__WEBPACK_IMPORTED_MODULE_2__(element)) != null ? _a : {};\n  let top = element.getBoundingClientRect().top + scrollTop;\n  if (!!offsetTop && (hasCustomScrollParent(element, skipFix) || hasCustomOffsetParent(element))) {\n    top -= offsetTop;\n  }\n  const output = Math.floor(top - offset);\n  return output < 0 ? 0 : output;\n}\nfunction scrollDocument() {\n  var _a;\n  return (_a = document.scrollingElement) != null ? _a : document.documentElement;\n}\nfunction scrollTo(value, options) {\n  const { duration, element } = options;\n  return new Promise((resolve, reject) => {\n    const { scrollTop } = element;\n    const limit = value > scrollTop ? value - scrollTop : scrollTop - value;\n    scroll__WEBPACK_IMPORTED_MODULE_1__.top(element, value, { duration: limit < 100 ? 50 : duration }, (error) => {\n      if (error && error.message !== \"Element already at target scroll position\") {\n        return reject(error);\n      }\n      return resolve();\n    });\n  });\n}\n\n// src/modules/helpers.ts\n\n\n\nvar isReact16 = react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal !== void 0;\nfunction getBrowser(userAgent = navigator.userAgent) {\n  let browser = userAgent;\n  if (typeof window === \"undefined\") {\n    browser = \"node\";\n  } else if (document.documentMode) {\n    browser = \"ie\";\n  } else if (/Edge/.test(userAgent)) {\n    browser = \"edge\";\n  } else if (Boolean(window.opera) || userAgent.includes(\" OPR/\")) {\n    browser = \"opera\";\n  } else if (typeof window.InstallTrigger !== \"undefined\") {\n    browser = \"firefox\";\n  } else if (window.chrome) {\n    browser = \"chrome\";\n  } else if (/(Version\\/([\\d._]+).*Safari|CriOS|FxiOS| Mobile\\/)/.test(userAgent)) {\n    browser = \"safari\";\n  }\n  return browser;\n}\nfunction getText(root) {\n  const content = [];\n  const recurse = (child) => {\n    if (typeof child === \"string\" || typeof child === \"number\") {\n      content.push(child);\n    } else if (Array.isArray(child)) {\n      child.forEach((c) => recurse(c));\n    } else if ((0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(child)) {\n      const { children } = child.props;\n      if (Array.isArray(children)) {\n        children.forEach((c) => recurse(c));\n      } else {\n        recurse(children);\n      }\n    }\n  };\n  recurse(root);\n  return content.join(\" \").trim();\n}\nfunction hasValidKeys(object, keys) {\n  if (!is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].plainObject(object) || !is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].array(keys)) {\n    return false;\n  }\n  return Object.keys(object).every((d) => keys.includes(d));\n}\nfunction hexToRGB(hex) {\n  const shorthandRegex = /^#?([\\da-f])([\\da-f])([\\da-f])$/i;\n  const properHex = hex.replace(shorthandRegex, (_m, r, g, b) => r + r + g + g + b + b);\n  const result = /^#?([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})$/i.exec(properHex);\n  return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)] : [];\n}\nfunction hideBeacon(step) {\n  return step.disableBeacon || step.placement === \"center\";\n}\nfunction isLegacy() {\n  return ![\"chrome\", \"safari\", \"firefox\", \"opera\"].includes(getBrowser());\n}\nfunction log({ data, debug = false, title, warn = false }) {\n  const logFn = warn ? console.warn || console.error : console.log;\n  if (debug) {\n    if (title && data) {\n      console.groupCollapsed(\n        `%creact-joyride: ${title}`,\n        \"color: #ff0044; font-weight: bold; font-size: 12px;\"\n      );\n      if (Array.isArray(data)) {\n        data.forEach((d) => {\n          if (is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].plainObject(d) && d.key) {\n            logFn.apply(console, [d.key, d.value]);\n          } else {\n            logFn.apply(console, [d]);\n          }\n        });\n      } else {\n        logFn.apply(console, [data]);\n      }\n      console.groupEnd();\n    } else {\n      console.error(\"Missing title or data props\");\n    }\n  }\n}\nfunction noop() {\n  return void 0;\n}\nfunction objectKeys(input) {\n  return Object.keys(input);\n}\nfunction omit(input, ...filter) {\n  if (!is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].plainObject(input)) {\n    throw new TypeError(\"Expected an object\");\n  }\n  const output = {};\n  for (const key in input) {\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key)) {\n        output[key] = input[key];\n      }\n    }\n  }\n  return output;\n}\nfunction pick(input, ...filter) {\n  if (!is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].plainObject(input)) {\n    throw new TypeError(\"Expected an object\");\n  }\n  if (!filter.length) {\n    return input;\n  }\n  const output = {};\n  for (const key in input) {\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (filter.includes(key)) {\n        output[key] = input[key];\n      }\n    }\n  }\n  return output;\n}\nfunction shouldScroll(options) {\n  const { isFirstStep, lifecycle, previousLifecycle, scrollToFirstStep, step, target } = options;\n  return !step.disableScrolling && (!isFirstStep || scrollToFirstStep || lifecycle === LIFECYCLE.TOOLTIP) && step.placement !== \"center\" && (!step.isFixed || !hasPosition(target)) && // fixed steps don't need to scroll\n  previousLifecycle !== lifecycle && [LIFECYCLE.BEACON, LIFECYCLE.TOOLTIP].includes(lifecycle);\n}\n\n// src/modules/step.ts\n\n\n\n// src/defaults.ts\nvar defaultFloaterProps = {\n  options: {\n    preventOverflow: {\n      boundariesElement: \"scrollParent\"\n    }\n  },\n  wrapperOptions: {\n    offset: -18,\n    position: true\n  }\n};\nvar defaultLocale = {\n  back: \"Back\",\n  close: \"Close\",\n  last: \"Last\",\n  next: \"Next\",\n  nextLabelWithProgress: \"Next (Step {step} of {steps})\",\n  open: \"Open the dialog\",\n  skip: \"Skip\"\n};\nvar defaultStep = {\n  event: \"click\",\n  placement: \"bottom\",\n  offset: 10,\n  disableBeacon: false,\n  disableCloseOnEsc: false,\n  disableOverlay: false,\n  disableOverlayClose: false,\n  disableScrollParentFix: false,\n  disableScrolling: false,\n  hideBackButton: false,\n  hideCloseButton: false,\n  hideFooter: false,\n  isFixed: false,\n  locale: defaultLocale,\n  showProgress: false,\n  showSkipButton: false,\n  spotlightClicks: false,\n  spotlightPadding: 10\n};\nvar defaultProps = {\n  continuous: false,\n  debug: false,\n  disableCloseOnEsc: false,\n  disableOverlay: false,\n  disableOverlayClose: false,\n  disableScrolling: false,\n  disableScrollParentFix: false,\n  getHelpers: noop(),\n  hideBackButton: false,\n  run: true,\n  scrollOffset: 20,\n  scrollDuration: 300,\n  scrollToFirstStep: false,\n  showSkipButton: false,\n  showProgress: false,\n  spotlightClicks: false,\n  spotlightPadding: 10,\n  steps: []\n};\n\n// src/styles.ts\n\nvar defaultOptions = {\n  arrowColor: \"#fff\",\n  backgroundColor: \"#fff\",\n  beaconSize: 36,\n  overlayColor: \"rgba(0, 0, 0, 0.5)\",\n  primaryColor: \"#f04\",\n  spotlightShadow: \"0 0 15px rgba(0, 0, 0, 0.5)\",\n  textColor: \"#333\",\n  width: 380,\n  zIndex: 100\n};\nvar buttonBase = {\n  backgroundColor: \"transparent\",\n  border: 0,\n  borderRadius: 0,\n  color: \"#555\",\n  cursor: \"pointer\",\n  fontSize: 16,\n  lineHeight: 1,\n  padding: 8,\n  WebkitAppearance: \"none\"\n};\nvar spotlight = {\n  borderRadius: 4,\n  position: \"absolute\"\n};\nfunction getStyles(props, step) {\n  var _a, _b, _c, _d, _e;\n  const { floaterProps, styles } = props;\n  const mergedFloaterProps = deepmerge__WEBPACK_IMPORTED_MODULE_5__((_a = step.floaterProps) != null ? _a : {}, floaterProps != null ? floaterProps : {});\n  const mergedStyles = deepmerge__WEBPACK_IMPORTED_MODULE_5__(styles != null ? styles : {}, (_b = step.styles) != null ? _b : {});\n  const options = deepmerge__WEBPACK_IMPORTED_MODULE_5__(defaultOptions, mergedStyles.options || {});\n  const hideBeacon2 = step.placement === \"center\" || step.disableBeacon;\n  let { width } = options;\n  if (window.innerWidth > 480) {\n    width = 380;\n  }\n  if (\"width\" in options) {\n    width = typeof options.width === \"number\" && window.innerWidth < options.width ? window.innerWidth - 30 : options.width;\n  }\n  const overlay = {\n    bottom: 0,\n    left: 0,\n    overflow: \"hidden\",\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    zIndex: options.zIndex\n  };\n  const defaultStyles = {\n    beacon: {\n      ...buttonBase,\n      display: hideBeacon2 ? \"none\" : \"inline-block\",\n      height: options.beaconSize,\n      position: \"relative\",\n      width: options.beaconSize,\n      zIndex: options.zIndex\n    },\n    beaconInner: {\n      animation: \"joyride-beacon-inner 1.2s infinite ease-in-out\",\n      backgroundColor: options.primaryColor,\n      borderRadius: \"50%\",\n      display: \"block\",\n      height: \"50%\",\n      left: \"50%\",\n      opacity: 0.7,\n      position: \"absolute\",\n      top: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"50%\"\n    },\n    beaconOuter: {\n      animation: \"joyride-beacon-outer 1.2s infinite ease-in-out\",\n      backgroundColor: `rgba(${hexToRGB(options.primaryColor).join(\",\")}, 0.2)`,\n      border: `2px solid ${options.primaryColor}`,\n      borderRadius: \"50%\",\n      boxSizing: \"border-box\",\n      display: \"block\",\n      height: \"100%\",\n      left: 0,\n      opacity: 0.9,\n      position: \"absolute\",\n      top: 0,\n      transformOrigin: \"center\",\n      width: \"100%\"\n    },\n    tooltip: {\n      backgroundColor: options.backgroundColor,\n      borderRadius: 5,\n      boxSizing: \"border-box\",\n      color: options.textColor,\n      fontSize: 16,\n      maxWidth: \"100%\",\n      padding: 15,\n      position: \"relative\",\n      width\n    },\n    tooltipContainer: {\n      lineHeight: 1.4,\n      textAlign: \"center\"\n    },\n    tooltipTitle: {\n      fontSize: 18,\n      margin: 0\n    },\n    tooltipContent: {\n      padding: \"20px 10px\"\n    },\n    tooltipFooter: {\n      alignItems: \"center\",\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      marginTop: 15\n    },\n    tooltipFooterSpacer: {\n      flex: 1\n    },\n    buttonNext: {\n      ...buttonBase,\n      backgroundColor: options.primaryColor,\n      borderRadius: 4,\n      color: \"#fff\"\n    },\n    buttonBack: {\n      ...buttonBase,\n      color: options.primaryColor,\n      marginLeft: \"auto\",\n      marginRight: 5\n    },\n    buttonClose: {\n      ...buttonBase,\n      color: options.textColor,\n      height: 14,\n      padding: 15,\n      position: \"absolute\",\n      right: 0,\n      top: 0,\n      width: 14\n    },\n    buttonSkip: {\n      ...buttonBase,\n      color: options.textColor,\n      fontSize: 14\n    },\n    overlay: {\n      ...overlay,\n      backgroundColor: options.overlayColor,\n      mixBlendMode: \"hard-light\"\n    },\n    overlayLegacy: {\n      ...overlay\n    },\n    overlayLegacyCenter: {\n      ...overlay,\n      backgroundColor: options.overlayColor\n    },\n    spotlight: {\n      ...spotlight,\n      backgroundColor: \"gray\"\n    },\n    spotlightLegacy: {\n      ...spotlight,\n      boxShadow: `0 0 0 9999px ${options.overlayColor}, ${options.spotlightShadow}`\n    },\n    floaterStyles: {\n      arrow: {\n        color: (_e = (_d = (_c = mergedFloaterProps == null ? void 0 : mergedFloaterProps.styles) == null ? void 0 : _c.arrow) == null ? void 0 : _d.color) != null ? _e : options.arrowColor\n      },\n      options: {\n        zIndex: options.zIndex + 100\n      }\n    },\n    options\n  };\n  return deepmerge__WEBPACK_IMPORTED_MODULE_5__(defaultStyles, mergedStyles);\n}\n\n// src/modules/step.ts\nfunction getTourProps(props) {\n  return pick(\n    props,\n    \"beaconComponent\",\n    \"disableCloseOnEsc\",\n    \"disableOverlay\",\n    \"disableOverlayClose\",\n    \"disableScrolling\",\n    \"disableScrollParentFix\",\n    \"floaterProps\",\n    \"hideBackButton\",\n    \"hideCloseButton\",\n    \"locale\",\n    \"showProgress\",\n    \"showSkipButton\",\n    \"spotlightClicks\",\n    \"spotlightPadding\",\n    \"styles\",\n    \"tooltipComponent\"\n  );\n}\nfunction getMergedStep(props, currentStep) {\n  var _a, _b, _c, _d, _e, _f;\n  const step = currentStep != null ? currentStep : {};\n  const mergedStep = deepmerge__WEBPACK_IMPORTED_MODULE_5__.all([defaultStep, getTourProps(props), step], {\n    isMergeableObject: is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].plainObject\n  });\n  const mergedStyles = getStyles(props, mergedStep);\n  const scrollParent2 = hasCustomScrollParent(\n    getElement(mergedStep.target),\n    mergedStep.disableScrollParentFix\n  );\n  const floaterProps = deepmerge__WEBPACK_IMPORTED_MODULE_5__.all([\n    defaultFloaterProps,\n    (_a = props.floaterProps) != null ? _a : {},\n    (_b = mergedStep.floaterProps) != null ? _b : {}\n  ]);\n  floaterProps.offset = mergedStep.offset;\n  floaterProps.styles = deepmerge__WEBPACK_IMPORTED_MODULE_5__((_c = floaterProps.styles) != null ? _c : {}, mergedStyles.floaterStyles);\n  floaterProps.offset += (_e = (_d = props.spotlightPadding) != null ? _d : mergedStep.spotlightPadding) != null ? _e : 0;\n  if (mergedStep.placementBeacon && floaterProps.wrapperOptions) {\n    floaterProps.wrapperOptions.placement = mergedStep.placementBeacon;\n  }\n  if (scrollParent2 && floaterProps.options.preventOverflow) {\n    floaterProps.options.preventOverflow.boundariesElement = \"window\";\n  }\n  return {\n    ...mergedStep,\n    locale: deepmerge__WEBPACK_IMPORTED_MODULE_5__.all([defaultLocale, (_f = props.locale) != null ? _f : {}, mergedStep.locale || {}]),\n    floaterProps,\n    styles: omit(mergedStyles, \"floaterStyles\")\n  };\n}\nfunction validateStep(step, debug = false) {\n  if (!is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].plainObject(step)) {\n    log({\n      title: \"validateStep\",\n      data: \"step must be an object\",\n      warn: true,\n      debug\n    });\n    return false;\n  }\n  if (!step.target) {\n    log({\n      title: \"validateStep\",\n      data: \"target is missing from the step\",\n      warn: true,\n      debug\n    });\n    return false;\n  }\n  return true;\n}\nfunction validateSteps(steps, debug = false) {\n  if (!is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].array(steps)) {\n    log({\n      title: \"validateSteps\",\n      data: \"steps must be an array\",\n      warn: true,\n      debug\n    });\n    return false;\n  }\n  return steps.every((d) => validateStep(d, debug));\n}\n\n// src/modules/store.ts\n\nvar defaultState = {\n  action: \"init\",\n  controlled: false,\n  index: 0,\n  lifecycle: LIFECYCLE.INIT,\n  origin: null,\n  size: 0,\n  status: STATUS.IDLE\n};\nvar validKeys = objectKeys(omit(defaultState, \"controlled\", \"size\"));\nvar Store = class {\n  constructor(options) {\n    __publicField(this, \"beaconPopper\");\n    __publicField(this, \"tooltipPopper\");\n    __publicField(this, \"data\", /* @__PURE__ */ new Map());\n    __publicField(this, \"listener\");\n    __publicField(this, \"store\", /* @__PURE__ */ new Map());\n    __publicField(this, \"addListener\", (listener) => {\n      this.listener = listener;\n    });\n    __publicField(this, \"setSteps\", (steps) => {\n      const { size, status } = this.getState();\n      const state = {\n        size: steps.length,\n        status\n      };\n      this.data.set(\"steps\", steps);\n      if (status === STATUS.WAITING && !size && steps.length) {\n        state.status = STATUS.RUNNING;\n      }\n      this.setState(state);\n    });\n    __publicField(this, \"getPopper\", (name) => {\n      if (name === \"beacon\") {\n        return this.beaconPopper;\n      }\n      return this.tooltipPopper;\n    });\n    __publicField(this, \"setPopper\", (name, popper) => {\n      if (name === \"beacon\") {\n        this.beaconPopper = popper;\n      } else {\n        this.tooltipPopper = popper;\n      }\n    });\n    __publicField(this, \"cleanupPoppers\", () => {\n      this.beaconPopper = null;\n      this.tooltipPopper = null;\n    });\n    __publicField(this, \"close\", (origin = null) => {\n      const { index, status } = this.getState();\n      if (status !== STATUS.RUNNING) {\n        return;\n      }\n      this.setState({\n        ...this.getNextState({ action: ACTIONS.CLOSE, index: index + 1, origin })\n      });\n    });\n    __publicField(this, \"go\", (nextIndex) => {\n      const { controlled, status } = this.getState();\n      if (controlled || status !== STATUS.RUNNING) {\n        return;\n      }\n      const step = this.getSteps()[nextIndex];\n      this.setState({\n        ...this.getNextState({ action: ACTIONS.GO, index: nextIndex }),\n        status: step ? status : STATUS.FINISHED\n      });\n    });\n    __publicField(this, \"info\", () => this.getState());\n    __publicField(this, \"next\", () => {\n      const { index, status } = this.getState();\n      if (status !== STATUS.RUNNING) {\n        return;\n      }\n      this.setState(this.getNextState({ action: ACTIONS.NEXT, index: index + 1 }));\n    });\n    __publicField(this, \"open\", () => {\n      const { status } = this.getState();\n      if (status !== STATUS.RUNNING) {\n        return;\n      }\n      this.setState({\n        ...this.getNextState({ action: ACTIONS.UPDATE, lifecycle: LIFECYCLE.TOOLTIP })\n      });\n    });\n    __publicField(this, \"prev\", () => {\n      const { index, status } = this.getState();\n      if (status !== STATUS.RUNNING) {\n        return;\n      }\n      this.setState({\n        ...this.getNextState({ action: ACTIONS.PREV, index: index - 1 })\n      });\n    });\n    __publicField(this, \"reset\", (restart = false) => {\n      const { controlled } = this.getState();\n      if (controlled) {\n        return;\n      }\n      this.setState({\n        ...this.getNextState({ action: ACTIONS.RESET, index: 0 }),\n        status: restart ? STATUS.RUNNING : STATUS.READY\n      });\n    });\n    __publicField(this, \"skip\", () => {\n      const { status } = this.getState();\n      if (status !== STATUS.RUNNING) {\n        return;\n      }\n      this.setState({\n        action: ACTIONS.SKIP,\n        lifecycle: LIFECYCLE.INIT,\n        status: STATUS.SKIPPED\n      });\n    });\n    __publicField(this, \"start\", (nextIndex) => {\n      const { index, size } = this.getState();\n      this.setState({\n        ...this.getNextState(\n          {\n            action: ACTIONS.START,\n            index: is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].number(nextIndex) ? nextIndex : index\n          },\n          true\n        ),\n        status: size ? STATUS.RUNNING : STATUS.WAITING\n      });\n    });\n    __publicField(this, \"stop\", (advance = false) => {\n      const { index, status } = this.getState();\n      if ([STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\n        return;\n      }\n      this.setState({\n        ...this.getNextState({ action: ACTIONS.STOP, index: index + (advance ? 1 : 0) }),\n        status: STATUS.PAUSED\n      });\n    });\n    __publicField(this, \"update\", (state) => {\n      var _a, _b;\n      if (!hasValidKeys(state, validKeys)) {\n        throw new Error(`State is not valid. Valid keys: ${validKeys.join(\", \")}`);\n      }\n      this.setState({\n        ...this.getNextState(\n          {\n            ...this.getState(),\n            ...state,\n            action: (_a = state.action) != null ? _a : ACTIONS.UPDATE,\n            origin: (_b = state.origin) != null ? _b : null\n          },\n          true\n        )\n      });\n    });\n    const { continuous = false, stepIndex, steps = [] } = options != null ? options : {};\n    this.setState(\n      {\n        action: ACTIONS.INIT,\n        controlled: is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].number(stepIndex),\n        continuous,\n        index: is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].number(stepIndex) ? stepIndex : 0,\n        lifecycle: LIFECYCLE.INIT,\n        origin: null,\n        status: steps.length ? STATUS.READY : STATUS.IDLE\n      },\n      true\n    );\n    this.beaconPopper = null;\n    this.tooltipPopper = null;\n    this.listener = null;\n    this.setSteps(steps);\n  }\n  getState() {\n    if (!this.store.size) {\n      return { ...defaultState };\n    }\n    return {\n      action: this.store.get(\"action\") || \"\",\n      controlled: this.store.get(\"controlled\") || false,\n      index: parseInt(this.store.get(\"index\"), 10),\n      lifecycle: this.store.get(\"lifecycle\") || \"\",\n      origin: this.store.get(\"origin\") || null,\n      size: this.store.get(\"size\") || 0,\n      status: this.store.get(\"status\") || \"\"\n    };\n  }\n  getNextState(state, force = false) {\n    var _a, _b, _c, _d, _e;\n    const { action, controlled, index, size, status } = this.getState();\n    const newIndex = is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].number(state.index) ? state.index : index;\n    const nextIndex = controlled && !force ? index : Math.min(Math.max(newIndex, 0), size);\n    return {\n      action: (_a = state.action) != null ? _a : action,\n      controlled,\n      index: nextIndex,\n      lifecycle: (_b = state.lifecycle) != null ? _b : LIFECYCLE.INIT,\n      origin: (_c = state.origin) != null ? _c : null,\n      size: (_d = state.size) != null ? _d : size,\n      status: nextIndex === size ? STATUS.FINISHED : (_e = state.status) != null ? _e : status\n    };\n  }\n  getSteps() {\n    const steps = this.data.get(\"steps\");\n    return Array.isArray(steps) ? steps : [];\n  }\n  hasUpdatedState(oldState) {\n    const before = JSON.stringify(oldState);\n    const after = JSON.stringify(this.getState());\n    return before !== after;\n  }\n  setState(nextState, initial = false) {\n    const state = this.getState();\n    const {\n      action,\n      index,\n      lifecycle,\n      origin = null,\n      size,\n      status\n    } = {\n      ...state,\n      ...nextState\n    };\n    this.store.set(\"action\", action);\n    this.store.set(\"index\", index);\n    this.store.set(\"lifecycle\", lifecycle);\n    this.store.set(\"origin\", origin);\n    this.store.set(\"size\", size);\n    this.store.set(\"status\", status);\n    if (initial) {\n      this.store.set(\"controlled\", nextState.controlled);\n      this.store.set(\"continuous\", nextState.continuous);\n    }\n    if (this.listener && this.hasUpdatedState(state)) {\n      this.listener(this.getState());\n    }\n  }\n  getHelpers() {\n    return {\n      close: this.close,\n      go: this.go,\n      info: this.info,\n      next: this.next,\n      open: this.open,\n      prev: this.prev,\n      reset: this.reset,\n      skip: this.skip\n    };\n  }\n};\nfunction createStore(options) {\n  return new Store(options);\n}\n\n// src/components/Overlay.tsx\n\n\n\n// src/components/Spotlight.tsx\n\nfunction JoyrideSpotlight({ styles }) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"div\",\n    {\n      key: \"JoyrideSpotlight\",\n      className: \"react-joyride__spotlight\",\n      \"data-test-id\": \"spotlight\",\n      style: styles\n    }\n  );\n}\nvar Spotlight_default = JoyrideSpotlight;\n\n// src/components/Overlay.tsx\nvar JoyrideOverlay = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"isActive\", false);\n    __publicField(this, \"resizeTimeout\");\n    __publicField(this, \"scrollTimeout\");\n    __publicField(this, \"scrollParent\");\n    __publicField(this, \"state\", {\n      isScrolling: false,\n      mouseOverSpotlight: false,\n      showSpotlight: true\n    });\n    __publicField(this, \"hideSpotlight\", () => {\n      const { continuous, disableOverlay, lifecycle } = this.props;\n      const hiddenLifecycles = [\n        LIFECYCLE.INIT,\n        LIFECYCLE.BEACON,\n        LIFECYCLE.COMPLETE,\n        LIFECYCLE.ERROR\n      ];\n      return disableOverlay || (continuous ? hiddenLifecycles.includes(lifecycle) : lifecycle !== LIFECYCLE.TOOLTIP);\n    });\n    __publicField(this, \"handleMouseMove\", (event) => {\n      const { mouseOverSpotlight } = this.state;\n      const { height, left, position, top, width } = this.spotlightStyles;\n      const offsetY = position === \"fixed\" ? event.clientY : event.pageY;\n      const offsetX = position === \"fixed\" ? event.clientX : event.pageX;\n      const inSpotlightHeight = offsetY >= top && offsetY <= top + height;\n      const inSpotlightWidth = offsetX >= left && offsetX <= left + width;\n      const inSpotlight = inSpotlightWidth && inSpotlightHeight;\n      if (inSpotlight !== mouseOverSpotlight) {\n        this.updateState({ mouseOverSpotlight: inSpotlight });\n      }\n    });\n    __publicField(this, \"handleScroll\", () => {\n      const { target } = this.props;\n      const element = getElement(target);\n      if (this.scrollParent !== document) {\n        const { isScrolling } = this.state;\n        if (!isScrolling) {\n          this.updateState({ isScrolling: true, showSpotlight: false });\n        }\n        clearTimeout(this.scrollTimeout);\n        this.scrollTimeout = window.setTimeout(() => {\n          this.updateState({ isScrolling: false, showSpotlight: true });\n        }, 50);\n      } else if (hasPosition(element, \"sticky\")) {\n        this.updateState({});\n      }\n    });\n    __publicField(this, \"handleResize\", () => {\n      clearTimeout(this.resizeTimeout);\n      this.resizeTimeout = window.setTimeout(() => {\n        if (!this.isActive) {\n          return;\n        }\n        this.forceUpdate();\n      }, 100);\n    });\n  }\n  componentDidMount() {\n    const { debug, disableScrolling, disableScrollParentFix = false, target } = this.props;\n    const element = getElement(target);\n    this.scrollParent = getScrollParent(element != null ? element : document.body, disableScrollParentFix, true);\n    this.isActive = true;\n    if (true) {\n      if (!disableScrolling && hasCustomScrollParent(element, true)) {\n        log({\n          title: \"step has a custom scroll parent and can cause trouble with scrolling\",\n          data: [{ key: \"parent\", value: this.scrollParent }],\n          debug\n        });\n      }\n    }\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n  componentDidUpdate(previousProps) {\n    var _a;\n    const { lifecycle, spotlightClicks } = this.props;\n    const { changed } = (0,tree_changes__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(previousProps, this.props);\n    if (changed(\"lifecycle\", LIFECYCLE.TOOLTIP)) {\n      (_a = this.scrollParent) == null ? void 0 : _a.addEventListener(\"scroll\", this.handleScroll, { passive: true });\n      setTimeout(() => {\n        const { isScrolling } = this.state;\n        if (!isScrolling) {\n          this.updateState({ showSpotlight: true });\n        }\n      }, 100);\n    }\n    if (changed(\"spotlightClicks\") || changed(\"disableOverlay\") || changed(\"lifecycle\")) {\n      if (spotlightClicks && lifecycle === LIFECYCLE.TOOLTIP) {\n        window.addEventListener(\"mousemove\", this.handleMouseMove, false);\n      } else if (lifecycle !== LIFECYCLE.TOOLTIP) {\n        window.removeEventListener(\"mousemove\", this.handleMouseMove);\n      }\n    }\n  }\n  componentWillUnmount() {\n    var _a;\n    this.isActive = false;\n    window.removeEventListener(\"mousemove\", this.handleMouseMove);\n    window.removeEventListener(\"resize\", this.handleResize);\n    clearTimeout(this.resizeTimeout);\n    clearTimeout(this.scrollTimeout);\n    (_a = this.scrollParent) == null ? void 0 : _a.removeEventListener(\"scroll\", this.handleScroll);\n  }\n  get overlayStyles() {\n    const { mouseOverSpotlight } = this.state;\n    const { disableOverlayClose, placement, styles } = this.props;\n    let baseStyles = styles.overlay;\n    if (isLegacy()) {\n      baseStyles = placement === \"center\" ? styles.overlayLegacyCenter : styles.overlayLegacy;\n    }\n    return {\n      cursor: disableOverlayClose ? \"default\" : \"pointer\",\n      height: getDocumentHeight(),\n      pointerEvents: mouseOverSpotlight ? \"none\" : \"auto\",\n      ...baseStyles\n    };\n  }\n  get spotlightStyles() {\n    var _a, _b, _c;\n    const { showSpotlight } = this.state;\n    const {\n      disableScrollParentFix = false,\n      spotlightClicks,\n      spotlightPadding = 0,\n      styles,\n      target\n    } = this.props;\n    const element = getElement(target);\n    const elementRect = getClientRect(element);\n    const isFixedTarget = hasPosition(element);\n    const top = getElementPosition(element, spotlightPadding, disableScrollParentFix);\n    return {\n      ...isLegacy() ? styles.spotlightLegacy : styles.spotlight,\n      height: Math.round(((_a = elementRect == null ? void 0 : elementRect.height) != null ? _a : 0) + spotlightPadding * 2),\n      left: Math.round(((_b = elementRect == null ? void 0 : elementRect.left) != null ? _b : 0) - spotlightPadding),\n      opacity: showSpotlight ? 1 : 0,\n      pointerEvents: spotlightClicks ? \"none\" : \"auto\",\n      position: isFixedTarget ? \"fixed\" : \"absolute\",\n      top,\n      transition: \"opacity 0.2s\",\n      width: Math.round(((_c = elementRect == null ? void 0 : elementRect.width) != null ? _c : 0) + spotlightPadding * 2)\n    };\n  }\n  updateState(state) {\n    if (!this.isActive) {\n      return;\n    }\n    this.setState((previousState) => ({ ...previousState, ...state }));\n  }\n  render() {\n    const { showSpotlight } = this.state;\n    const { onClickOverlay, placement } = this.props;\n    const { hideSpotlight, overlayStyles, spotlightStyles } = this;\n    if (hideSpotlight()) {\n      return null;\n    }\n    let spotlight2 = placement !== \"center\" && showSpotlight && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Spotlight_default, { styles: spotlightStyles });\n    if (getBrowser() === \"safari\") {\n      const { mixBlendMode, zIndex, ...safariOverlay } = overlayStyles;\n      spotlight2 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { style: { ...safariOverlay } }, spotlight2);\n      delete overlayStyles.backgroundColor;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      \"div\",\n      {\n        className: \"react-joyride__overlay\",\n        \"data-test-id\": \"overlay\",\n        onClick: onClickOverlay,\n        role: \"presentation\",\n        style: overlayStyles\n      },\n      spotlight2\n    );\n  }\n};\n\n// src/components/Portal.tsx\n\n\nvar JoyridePortal = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"node\", null);\n  }\n  componentDidMount() {\n    const { id } = this.props;\n    if (!canUseDOM()) {\n      return;\n    }\n    this.node = document.createElement(\"div\");\n    this.node.id = id;\n    document.body.appendChild(this.node);\n    if (!isReact16) {\n      this.renderReact15();\n    }\n  }\n  componentDidUpdate() {\n    if (!canUseDOM()) {\n      return;\n    }\n    if (!isReact16) {\n      this.renderReact15();\n    }\n  }\n  componentWillUnmount() {\n    if (!canUseDOM() || !this.node) {\n      return;\n    }\n    if (!isReact16) {\n      react_dom__WEBPACK_IMPORTED_MODULE_3__.unmountComponentAtNode(this.node);\n    }\n    if (this.node.parentNode === document.body) {\n      document.body.removeChild(this.node);\n      this.node = null;\n    }\n  }\n  renderReact15() {\n    if (!canUseDOM()) {\n      return;\n    }\n    const { children } = this.props;\n    if (this.node) {\n      react_dom__WEBPACK_IMPORTED_MODULE_3__.unstable_renderSubtreeIntoContainer(this, children, this.node);\n    }\n  }\n  renderReact16() {\n    if (!canUseDOM() || !isReact16) {\n      return null;\n    }\n    const { children } = this.props;\n    if (!this.node) {\n      return null;\n    }\n    return react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal(children, this.node);\n  }\n  render() {\n    if (!isReact16) {\n      return null;\n    }\n    return this.renderReact16();\n  }\n};\n\n// src/components/Step.tsx\n\n\n\n\n\n// src/modules/scope.ts\nvar Scope = class {\n  constructor(element, options) {\n    __publicField(this, \"element\");\n    __publicField(this, \"options\");\n    __publicField(this, \"canBeTabbed\", (element) => {\n      const { tabIndex } = element;\n      if (tabIndex === null || tabIndex < 0) {\n        return false;\n      }\n      return this.canHaveFocus(element);\n    });\n    __publicField(this, \"canHaveFocus\", (element) => {\n      const validTabNodes = /input|select|textarea|button|object/;\n      const nodeName = element.nodeName.toLowerCase();\n      const isValid = validTabNodes.test(nodeName) && !element.getAttribute(\"disabled\") || nodeName === \"a\" && !!element.getAttribute(\"href\");\n      return isValid && this.isVisible(element);\n    });\n    __publicField(this, \"findValidTabElements\", () => [].slice.call(this.element.querySelectorAll(\"*\"), 0).filter(this.canBeTabbed));\n    __publicField(this, \"handleKeyDown\", (event) => {\n      const { code = \"Tab\" } = this.options;\n      if (event.code === code) {\n        this.interceptTab(event);\n      }\n    });\n    __publicField(this, \"interceptTab\", (event) => {\n      event.preventDefault();\n      const elements = this.findValidTabElements();\n      const { shiftKey } = event;\n      if (!elements.length) {\n        return;\n      }\n      let x = document.activeElement ? elements.indexOf(document.activeElement) : 0;\n      if (x === -1 || !shiftKey && x + 1 === elements.length) {\n        x = 0;\n      } else if (shiftKey && x === 0) {\n        x = elements.length - 1;\n      } else {\n        x += shiftKey ? -1 : 1;\n      }\n      elements[x].focus();\n    });\n    // eslint-disable-next-line class-methods-use-this\n    __publicField(this, \"isHidden\", (element) => {\n      const noSize = element.offsetWidth <= 0 && element.offsetHeight <= 0;\n      const style = window.getComputedStyle(element);\n      if (noSize && !element.innerHTML) {\n        return true;\n      }\n      return noSize && style.getPropertyValue(\"overflow\") !== \"visible\" || style.getPropertyValue(\"display\") === \"none\";\n    });\n    __publicField(this, \"isVisible\", (element) => {\n      let parentElement = element;\n      while (parentElement) {\n        if (parentElement instanceof HTMLElement) {\n          if (parentElement === document.body) {\n            break;\n          }\n          if (this.isHidden(parentElement)) {\n            return false;\n          }\n          parentElement = parentElement.parentNode;\n        }\n      }\n      return true;\n    });\n    __publicField(this, \"removeScope\", () => {\n      window.removeEventListener(\"keydown\", this.handleKeyDown);\n    });\n    __publicField(this, \"checkFocus\", (target) => {\n      if (document.activeElement !== target) {\n        target.focus();\n        window.requestAnimationFrame(() => this.checkFocus(target));\n      }\n    });\n    __publicField(this, \"setFocus\", () => {\n      const { selector } = this.options;\n      if (!selector) {\n        return;\n      }\n      const target = this.element.querySelector(selector);\n      if (target) {\n        window.requestAnimationFrame(() => this.checkFocus(target));\n      }\n    });\n    if (!(element instanceof HTMLElement)) {\n      throw new TypeError(\"Invalid parameter: element must be an HTMLElement\");\n    }\n    this.element = element;\n    this.options = options;\n    window.addEventListener(\"keydown\", this.handleKeyDown, false);\n    this.setFocus();\n  }\n};\n\n// src/components/Beacon.tsx\n\n\n\nvar JoyrideBeacon = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    __publicField(this, \"beacon\", null);\n    __publicField(this, \"setBeaconRef\", (c) => {\n      this.beacon = c;\n    });\n    if (props.beaconComponent) {\n      return;\n    }\n    const head = document.head || document.getElementsByTagName(\"head\")[0];\n    const style = document.createElement(\"style\");\n    style.id = \"joyride-beacon-animation\";\n    if (props.nonce) {\n      style.setAttribute(\"nonce\", props.nonce);\n    }\n    const css = `\n        @keyframes joyride-beacon-inner {\n          20% {\n            opacity: 0.9;\n          }\n        \n          90% {\n            opacity: 0.7;\n          }\n        }\n        \n        @keyframes joyride-beacon-outer {\n          0% {\n            transform: scale(1);\n          }\n        \n          45% {\n            opacity: 0.7;\n            transform: scale(0.75);\n          }\n        \n          100% {\n            opacity: 0.9;\n            transform: scale(1);\n          }\n        }\n      `;\n    style.appendChild(document.createTextNode(css));\n    head.appendChild(style);\n  }\n  componentDidMount() {\n    const { shouldFocus } = this.props;\n    if (true) {\n      if (!is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].domElement(this.beacon)) {\n        console.warn(\"beacon is not a valid DOM element\");\n      }\n    }\n    setTimeout(() => {\n      if (is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].domElement(this.beacon) && shouldFocus) {\n        this.beacon.focus();\n      }\n    }, 0);\n  }\n  componentWillUnmount() {\n    const style = document.getElementById(\"joyride-beacon-animation\");\n    if (style == null ? void 0 : style.parentNode) {\n      style.parentNode.removeChild(style);\n    }\n  }\n  render() {\n    const {\n      beaconComponent,\n      continuous,\n      index,\n      isLastStep,\n      locale,\n      onClickOrHover,\n      size,\n      step,\n      styles\n    } = this.props;\n    const title = is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].string(locale.open) ? locale.open : react_innertext__WEBPACK_IMPORTED_MODULE_8__(locale.open);\n    const sharedProps = {\n      \"aria-label\": title,\n      onClick: onClickOrHover,\n      onMouseEnter: onClickOrHover,\n      ref: this.setBeaconRef,\n      title\n    };\n    let component;\n    if (beaconComponent) {\n      const BeaconComponent = beaconComponent;\n      component = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        BeaconComponent,\n        {\n          continuous,\n          index,\n          isLastStep,\n          size,\n          step,\n          ...sharedProps\n        }\n      );\n    } else {\n      component = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        \"button\",\n        {\n          key: \"JoyrideBeacon\",\n          className: \"react-joyride__beacon\",\n          \"data-test-id\": \"button-beacon\",\n          style: styles.beacon,\n          type: \"button\",\n          ...sharedProps\n        },\n        /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", { style: styles.beaconInner }),\n        /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", { style: styles.beaconOuter })\n      );\n    }\n    return component;\n  }\n};\n\n// src/components/Tooltip/index.tsx\n\n\n// src/components/Tooltip/Container.tsx\n\n\n// src/components/Tooltip/CloseButton.tsx\n\nfunction JoyrideTooltipCloseButton({ styles, ...props }) {\n  const { color, height, width, ...style } = styles;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { style, type: \"button\", ...props }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"svg\",\n    {\n      height: typeof height === \"number\" ? `${height}px` : height,\n      preserveAspectRatio: \"xMidYMid\",\n      version: \"1.1\",\n      viewBox: \"0 0 18 18\",\n      width: typeof width === \"number\" ? `${width}px` : width,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      \"path\",\n      {\n        d: \"M8.13911129,9.00268191 L0.171521827,17.0258467 C-0.0498027049,17.248715 -0.0498027049,17.6098394 0.171521827,17.8327545 C0.28204354,17.9443526 0.427188206,17.9998706 0.572051765,17.9998706 C0.71714958,17.9998706 0.862013139,17.9443526 0.972581703,17.8327545 L9.0000937,9.74924618 L17.0276057,17.8327545 C17.1384085,17.9443526 17.2832721,17.9998706 17.4281356,17.9998706 C17.5729992,17.9998706 17.718097,17.9443526 17.8286656,17.8327545 C18.0499901,17.6098862 18.0499901,17.2487618 17.8286656,17.0258467 L9.86135722,9.00268191 L17.8340066,0.973848225 C18.0553311,0.750979934 18.0553311,0.389855532 17.8340066,0.16694039 C17.6126821,-0.0556467968 17.254037,-0.0556467968 17.0329467,0.16694039 L9.00042166,8.25611765 L0.967006424,0.167268345 C0.745681892,-0.0553188426 0.387317931,-0.0553188426 0.165993399,0.167268345 C-0.0553311331,0.390136635 -0.0553311331,0.751261038 0.165993399,0.974176179 L8.13920499,9.00268191 L8.13911129,9.00268191 Z\",\n        fill: color\n      }\n    ))\n  ));\n}\nvar CloseButton_default = JoyrideTooltipCloseButton;\n\n// src/components/Tooltip/Container.tsx\nfunction JoyrideTooltipContainer(props) {\n  const { backProps, closeProps, index, isLastStep, primaryProps, skipProps, step, tooltipProps } = props;\n  const { content, hideBackButton, hideCloseButton, hideFooter, showSkipButton, styles, title } = step;\n  const output = {\n    primary: primaryProps.title\n  };\n  if (output.primary) {\n    output.primary = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      \"button\",\n      {\n        \"data-test-id\": \"button-primary\",\n        style: styles.buttonNext,\n        type: \"button\",\n        ...primaryProps\n      },\n      output.primary\n    );\n  }\n  if (showSkipButton && !isLastStep) {\n    output.skip = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      \"button\",\n      {\n        \"aria-live\": \"off\",\n        \"data-test-id\": \"button-skip\",\n        style: styles.buttonSkip,\n        type: \"button\",\n        ...skipProps\n      },\n      skipProps.title\n    );\n  }\n  if (!hideBackButton && index > 0) {\n    output.back = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", { \"data-test-id\": \"button-back\", style: styles.buttonBack, type: \"button\", ...backProps }, backProps.title);\n  }\n  output.close = !hideCloseButton && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CloseButton_default, { \"data-test-id\": \"button-close\", styles: styles.buttonClose, ...closeProps });\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    \"div\",\n    {\n      key: \"JoyrideTooltip\",\n      \"aria-label\": getText(title) || getText(content),\n      className: \"react-joyride__tooltip\",\n      style: styles.tooltip,\n      ...tooltipProps\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { style: styles.tooltipContainer }, title && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"h1\", { \"aria-label\": getText(title), style: styles.tooltipTitle }, title), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { style: styles.tooltipContent }, content)),\n    !hideFooter && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { style: styles.tooltipFooter }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { style: styles.tooltipFooterSpacer }, output.skip), output.back, output.primary),\n    output.close\n  );\n}\nvar Container_default = JoyrideTooltipContainer;\n\n// src/components/Tooltip/index.tsx\nvar JoyrideTooltip = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"handleClickBack\", (event) => {\n      event.preventDefault();\n      const { helpers } = this.props;\n      helpers.prev();\n    });\n    __publicField(this, \"handleClickClose\", (event) => {\n      event.preventDefault();\n      const { helpers } = this.props;\n      helpers.close(\"button_close\");\n    });\n    __publicField(this, \"handleClickPrimary\", (event) => {\n      event.preventDefault();\n      const { continuous, helpers } = this.props;\n      if (!continuous) {\n        helpers.close(\"button_primary\");\n        return;\n      }\n      helpers.next();\n    });\n    __publicField(this, \"handleClickSkip\", (event) => {\n      event.preventDefault();\n      const { helpers } = this.props;\n      helpers.skip();\n    });\n    __publicField(this, \"getElementsProps\", () => {\n      const { continuous, index, isLastStep, setTooltipRef, size, step } = this.props;\n      const back = getText(step.locale.back);\n      const close = getText(step.locale.close);\n      const last = getText(step.locale.last);\n      const next = getText(step.locale.next);\n      const skip = getText(step.locale.skip);\n      let primaryLabel = close;\n      let primaryText = close;\n      if (continuous) {\n        primaryLabel = next;\n        primaryText = next;\n        if (step.showProgress && !isLastStep) {\n          primaryLabel = getText(step.locale.nextLabelWithProgress).replace(\"{step}\", String(index + 1)).replace(\"{steps}\", String(size));\n          primaryText = `${next} (${index + 1}/${size})`;\n        }\n        if (isLastStep) {\n          primaryLabel = last;\n          primaryText = last;\n        }\n      }\n      return {\n        backProps: {\n          \"aria-label\": back,\n          \"data-action\": \"back\",\n          onClick: this.handleClickBack,\n          role: \"button\",\n          title: back\n        },\n        closeProps: {\n          \"aria-label\": close,\n          \"data-action\": \"close\",\n          onClick: this.handleClickClose,\n          role: \"button\",\n          title: close\n        },\n        primaryProps: {\n          \"aria-label\": primaryLabel,\n          \"data-action\": \"primary\",\n          onClick: this.handleClickPrimary,\n          role: \"button\",\n          title: primaryText\n        },\n        skipProps: {\n          \"aria-label\": skip,\n          \"data-action\": \"skip\",\n          onClick: this.handleClickSkip,\n          role: \"button\",\n          title: skip\n        },\n        tooltipProps: {\n          \"aria-modal\": true,\n          ref: setTooltipRef,\n          role: \"alertdialog\"\n        }\n      };\n    });\n  }\n  render() {\n    const { continuous, index, isLastStep, setTooltipRef, size, step } = this.props;\n    const { beaconComponent, tooltipComponent, ...cleanStep } = step;\n    let component;\n    if (tooltipComponent) {\n      const renderProps = {\n        ...this.getElementsProps(),\n        continuous,\n        index,\n        isLastStep,\n        size,\n        step: cleanStep,\n        setTooltipRef\n      };\n      const TooltipComponent = tooltipComponent;\n      component = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TooltipComponent, { ...renderProps });\n    } else {\n      component = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        Container_default,\n        {\n          ...this.getElementsProps(),\n          continuous,\n          index,\n          isLastStep,\n          size,\n          step\n        }\n      );\n    }\n    return component;\n  }\n};\n\n// src/components/Step.tsx\nvar JoyrideStep = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"scope\", null);\n    __publicField(this, \"tooltip\", null);\n    /**\n     * Beacon click/hover event listener\n     */\n    __publicField(this, \"handleClickHoverBeacon\", (event) => {\n      const { step, store } = this.props;\n      if (event.type === \"mouseenter\" && step.event !== \"hover\") {\n        return;\n      }\n      store.update({ lifecycle: LIFECYCLE.TOOLTIP });\n    });\n    __publicField(this, \"setTooltipRef\", (element) => {\n      this.tooltip = element;\n    });\n    __publicField(this, \"setPopper\", (popper, type) => {\n      var _a;\n      const { action, lifecycle, step, store } = this.props;\n      if (type === \"wrapper\") {\n        store.setPopper(\"beacon\", popper);\n      } else {\n        store.setPopper(\"tooltip\", popper);\n      }\n      if (store.getPopper(\"beacon\") && (store.getPopper(\"tooltip\") || step.placement === \"center\") && lifecycle === LIFECYCLE.INIT) {\n        store.update({\n          action,\n          lifecycle: LIFECYCLE.READY\n        });\n      }\n      if ((_a = step.floaterProps) == null ? void 0 : _a.getPopper) {\n        step.floaterProps.getPopper(popper, type);\n      }\n    });\n    __publicField(this, \"renderTooltip\", (renderProps) => {\n      const { continuous, helpers, index, size, step } = this.props;\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        JoyrideTooltip,\n        {\n          continuous,\n          helpers,\n          index,\n          isLastStep: index + 1 === size,\n          setTooltipRef: this.setTooltipRef,\n          size,\n          step,\n          ...renderProps\n        }\n      );\n    });\n  }\n  componentDidMount() {\n    const { debug, index } = this.props;\n    log({\n      title: `step:${index}`,\n      data: [{ key: \"props\", value: this.props }],\n      debug\n    });\n  }\n  componentDidUpdate(previousProps) {\n    var _a;\n    const {\n      action,\n      callback,\n      continuous,\n      controlled,\n      debug,\n      helpers,\n      index,\n      lifecycle,\n      status,\n      step,\n      store\n    } = this.props;\n    const { changed, changedFrom } = (0,tree_changes__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(previousProps, this.props);\n    const state = helpers.info();\n    const skipBeacon = continuous && action !== ACTIONS.CLOSE && (index > 0 || action === ACTIONS.PREV);\n    const hasStoreChanged = changed(\"action\") || changed(\"index\") || changed(\"lifecycle\") || changed(\"status\");\n    const isInitial = changedFrom(\"lifecycle\", [LIFECYCLE.TOOLTIP, LIFECYCLE.INIT], LIFECYCLE.INIT);\n    const isAfterAction = changed(\"action\", [\n      ACTIONS.NEXT,\n      ACTIONS.PREV,\n      ACTIONS.SKIP,\n      ACTIONS.CLOSE\n    ]);\n    const isControlled = controlled && index === previousProps.index;\n    if (isAfterAction && (isInitial || isControlled)) {\n      callback({\n        ...state,\n        index: previousProps.index,\n        lifecycle: LIFECYCLE.COMPLETE,\n        step: previousProps.step,\n        type: EVENTS.STEP_AFTER\n      });\n    }\n    if (step.placement === \"center\" && status === STATUS.RUNNING && changed(\"index\") && action !== ACTIONS.START && lifecycle === LIFECYCLE.INIT) {\n      store.update({ lifecycle: LIFECYCLE.READY });\n    }\n    if (hasStoreChanged) {\n      const element = getElement(step.target);\n      const elementExists = !!element;\n      const hasRenderedTarget = elementExists && isElementVisible(element);\n      if (hasRenderedTarget) {\n        if (changedFrom(\"status\", STATUS.READY, STATUS.RUNNING) || changedFrom(\"lifecycle\", LIFECYCLE.INIT, LIFECYCLE.READY)) {\n          callback({\n            ...state,\n            step,\n            type: EVENTS.STEP_BEFORE\n          });\n        }\n      } else {\n        console.warn(elementExists ? \"Target not visible\" : \"Target not mounted\", step);\n        callback({\n          ...state,\n          type: EVENTS.TARGET_NOT_FOUND,\n          step\n        });\n        if (!controlled) {\n          store.update({ index: index + (action === ACTIONS.PREV ? -1 : 1) });\n        }\n      }\n    }\n    if (changedFrom(\"lifecycle\", LIFECYCLE.INIT, LIFECYCLE.READY)) {\n      store.update({\n        lifecycle: hideBeacon(step) || skipBeacon ? LIFECYCLE.TOOLTIP : LIFECYCLE.BEACON\n      });\n    }\n    if (changed(\"index\")) {\n      log({\n        title: `step:${lifecycle}`,\n        data: [{ key: \"props\", value: this.props }],\n        debug\n      });\n    }\n    if (changed(\"lifecycle\", LIFECYCLE.BEACON)) {\n      callback({\n        ...state,\n        step,\n        type: EVENTS.BEACON\n      });\n    }\n    if (changed(\"lifecycle\", LIFECYCLE.TOOLTIP)) {\n      callback({\n        ...state,\n        step,\n        type: EVENTS.TOOLTIP\n      });\n      if (this.tooltip) {\n        this.scope = new Scope(this.tooltip, { selector: \"[data-action=primary]\" });\n        this.scope.setFocus();\n      }\n    }\n    if (changedFrom(\"lifecycle\", [LIFECYCLE.TOOLTIP, LIFECYCLE.INIT], LIFECYCLE.INIT)) {\n      (_a = this.scope) == null ? void 0 : _a.removeScope();\n      store.cleanupPoppers();\n    }\n  }\n  componentWillUnmount() {\n    var _a;\n    (_a = this.scope) == null ? void 0 : _a.removeScope();\n  }\n  get open() {\n    const { lifecycle, step } = this.props;\n    return hideBeacon(step) || lifecycle === LIFECYCLE.TOOLTIP;\n  }\n  render() {\n    const { continuous, debug, index, nonce, shouldScroll: shouldScroll2, size, step } = this.props;\n    const target = getElement(step.target);\n    if (!validateStep(step) || !is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].domElement(target)) {\n      return null;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { key: `JoyrideStep-${index}`, className: \"react-joyride__step\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      react_floater__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n      {\n        ...step.floaterProps,\n        component: this.renderTooltip,\n        debug,\n        getPopper: this.setPopper,\n        id: `react-joyride-step-${index}`,\n        open: this.open,\n        placement: step.placement,\n        target: step.target\n      },\n      /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        JoyrideBeacon,\n        {\n          beaconComponent: step.beaconComponent,\n          continuous,\n          index,\n          isLastStep: index + 1 === size,\n          locale: step.locale,\n          nonce,\n          onClickOrHover: this.handleClickHoverBeacon,\n          shouldFocus: shouldScroll2,\n          size,\n          step,\n          styles: step.styles\n        }\n      )\n    ));\n  }\n};\n\n// src/components/index.tsx\nvar Joyride = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    __publicField(this, \"helpers\");\n    __publicField(this, \"store\");\n    /**\n     * Trigger the callback.\n     */\n    __publicField(this, \"callback\", (data) => {\n      const { callback } = this.props;\n      if (is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].function(callback)) {\n        callback(data);\n      }\n    });\n    /**\n     * Keydown event listener\n     */\n    __publicField(this, \"handleKeyboard\", (event) => {\n      const { index, lifecycle } = this.state;\n      const { steps } = this.props;\n      const step = steps[index];\n      if (lifecycle === LIFECYCLE.TOOLTIP) {\n        if (event.code === \"Escape\" && step && !step.disableCloseOnEsc) {\n          this.store.close(\"keyboard\");\n        }\n      }\n    });\n    __publicField(this, \"handleClickOverlay\", () => {\n      const { index } = this.state;\n      const { steps } = this.props;\n      const step = getMergedStep(this.props, steps[index]);\n      if (!step.disableOverlayClose) {\n        this.helpers.close(\"overlay\");\n      }\n    });\n    /**\n     * Sync the store with the component's state\n     */\n    __publicField(this, \"syncState\", (state) => {\n      this.setState(state);\n    });\n    const { debug, getHelpers, run = true, stepIndex } = props;\n    this.store = createStore({\n      ...props,\n      controlled: run && is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].number(stepIndex)\n    });\n    this.helpers = this.store.getHelpers();\n    const { addListener } = this.store;\n    log({\n      title: \"init\",\n      data: [\n        { key: \"props\", value: this.props },\n        { key: \"state\", value: this.state }\n      ],\n      debug\n    });\n    addListener(this.syncState);\n    if (getHelpers) {\n      getHelpers(this.helpers);\n    }\n    this.state = this.store.getState();\n  }\n  componentDidMount() {\n    if (!canUseDOM()) {\n      return;\n    }\n    const { debug, disableCloseOnEsc, run, steps } = this.props;\n    const { start } = this.store;\n    if (validateSteps(steps, debug) && run) {\n      start();\n    }\n    if (!disableCloseOnEsc) {\n      document.body.addEventListener(\"keydown\", this.handleKeyboard, { passive: true });\n    }\n  }\n  componentDidUpdate(previousProps, previousState) {\n    if (!canUseDOM()) {\n      return;\n    }\n    const { action, controlled, index, status } = this.state;\n    const { debug, run, stepIndex, steps } = this.props;\n    const { stepIndex: previousStepIndex, steps: previousSteps } = previousProps;\n    const { reset, setSteps, start, stop, update } = this.store;\n    const { changed: changedProps } = (0,tree_changes__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(previousProps, this.props);\n    const { changed, changedFrom } = (0,tree_changes__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(previousState, this.state);\n    const step = getMergedStep(this.props, steps[index]);\n    const stepsChanged = !(0,_gilbarbara_deep_equal__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(previousSteps, steps);\n    const stepIndexChanged = is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].number(stepIndex) && changedProps(\"stepIndex\");\n    const target = getElement(step.target);\n    if (stepsChanged) {\n      if (validateSteps(steps, debug)) {\n        setSteps(steps);\n      } else {\n        console.warn(\"Steps are not valid\", steps);\n      }\n    }\n    if (changedProps(\"run\")) {\n      if (run) {\n        start(stepIndex);\n      } else {\n        stop();\n      }\n    }\n    if (stepIndexChanged) {\n      let nextAction = is_lite__WEBPACK_IMPORTED_MODULE_4__[\"default\"].number(previousStepIndex) && previousStepIndex < stepIndex ? ACTIONS.NEXT : ACTIONS.PREV;\n      if (action === ACTIONS.STOP) {\n        nextAction = ACTIONS.START;\n      }\n      if (![STATUS.FINISHED, STATUS.SKIPPED].includes(status)) {\n        update({\n          action: action === ACTIONS.CLOSE ? ACTIONS.CLOSE : nextAction,\n          index: stepIndex,\n          lifecycle: LIFECYCLE.INIT\n        });\n      }\n    }\n    if (!controlled && status === STATUS.RUNNING && index === 0 && !target) {\n      this.store.update({ index: index + 1 });\n      this.callback({\n        ...this.state,\n        type: EVENTS.TARGET_NOT_FOUND,\n        step\n      });\n    }\n    const callbackData = {\n      ...this.state,\n      index,\n      step\n    };\n    const isAfterAction = changed(\"action\", [\n      ACTIONS.NEXT,\n      ACTIONS.PREV,\n      ACTIONS.SKIP,\n      ACTIONS.CLOSE\n    ]);\n    if (isAfterAction && changed(\"status\", STATUS.PAUSED)) {\n      const previousStep = getMergedStep(this.props, steps[previousState.index]);\n      this.callback({\n        ...callbackData,\n        index: previousState.index,\n        lifecycle: LIFECYCLE.COMPLETE,\n        step: previousStep,\n        type: EVENTS.STEP_AFTER\n      });\n    }\n    if (changed(\"status\", [STATUS.FINISHED, STATUS.SKIPPED])) {\n      const previousStep = getMergedStep(this.props, steps[previousState.index]);\n      if (!controlled) {\n        this.callback({\n          ...callbackData,\n          index: previousState.index,\n          lifecycle: LIFECYCLE.COMPLETE,\n          step: previousStep,\n          type: EVENTS.STEP_AFTER\n        });\n      }\n      this.callback({\n        ...callbackData,\n        type: EVENTS.TOUR_END,\n        // Return the last step when the tour is finished\n        step: previousStep,\n        index: previousState.index\n      });\n      reset();\n    } else if (changedFrom(\"status\", [STATUS.IDLE, STATUS.READY], STATUS.RUNNING)) {\n      this.callback({\n        ...callbackData,\n        type: EVENTS.TOUR_START\n      });\n    } else if (changed(\"status\") || changed(\"action\", ACTIONS.RESET)) {\n      this.callback({\n        ...callbackData,\n        type: EVENTS.TOUR_STATUS\n      });\n    }\n    this.scrollToStep(previousState);\n  }\n  componentWillUnmount() {\n    const { disableCloseOnEsc } = this.props;\n    if (!disableCloseOnEsc) {\n      document.body.removeEventListener(\"keydown\", this.handleKeyboard);\n    }\n  }\n  scrollToStep(previousState) {\n    const { index, lifecycle, status } = this.state;\n    const {\n      debug,\n      disableScrollParentFix = false,\n      scrollDuration,\n      scrollOffset = 20,\n      scrollToFirstStep = false,\n      steps\n    } = this.props;\n    const step = getMergedStep(this.props, steps[index]);\n    const target = getElement(step.target);\n    const shouldScrollToStep = shouldScroll({\n      isFirstStep: index === 0,\n      lifecycle,\n      previousLifecycle: previousState.lifecycle,\n      scrollToFirstStep,\n      step,\n      target\n    });\n    if (status === STATUS.RUNNING && shouldScrollToStep) {\n      const hasCustomScroll = hasCustomScrollParent(target, disableScrollParentFix);\n      const scrollParent2 = getScrollParent(target, disableScrollParentFix);\n      let scrollY = Math.floor(getScrollTo(target, scrollOffset, disableScrollParentFix)) || 0;\n      log({\n        title: \"scrollToStep\",\n        data: [\n          { key: \"index\", value: index },\n          { key: \"lifecycle\", value: lifecycle },\n          { key: \"status\", value: status }\n        ],\n        debug\n      });\n      const beaconPopper = this.store.getPopper(\"beacon\");\n      const tooltipPopper = this.store.getPopper(\"tooltip\");\n      if (lifecycle === LIFECYCLE.BEACON && beaconPopper) {\n        const { offsets, placement } = beaconPopper;\n        if (![\"bottom\"].includes(placement) && !hasCustomScroll) {\n          scrollY = Math.floor(offsets.popper.top - scrollOffset);\n        }\n      } else if (lifecycle === LIFECYCLE.TOOLTIP && tooltipPopper) {\n        const { flipped, offsets, placement } = tooltipPopper;\n        if ([\"top\", \"right\", \"left\"].includes(placement) && !flipped && !hasCustomScroll) {\n          scrollY = Math.floor(offsets.popper.top - scrollOffset);\n        } else {\n          scrollY -= step.spotlightPadding;\n        }\n      }\n      scrollY = scrollY >= 0 ? scrollY : 0;\n      if (status === STATUS.RUNNING) {\n        scrollTo(scrollY, { element: scrollParent2, duration: scrollDuration }).then(\n          () => {\n            setTimeout(() => {\n              var _a;\n              (_a = this.store.getPopper(\"tooltip\")) == null ? void 0 : _a.instance.update();\n            }, 10);\n          }\n        );\n      }\n    }\n  }\n  render() {\n    if (!canUseDOM()) {\n      return null;\n    }\n    const { index, lifecycle, status } = this.state;\n    const {\n      continuous = false,\n      debug = false,\n      nonce,\n      scrollToFirstStep = false,\n      steps\n    } = this.props;\n    const isRunning = status === STATUS.RUNNING;\n    const content = {};\n    if (isRunning && steps[index]) {\n      const step = getMergedStep(this.props, steps[index]);\n      content.step = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        JoyrideStep,\n        {\n          ...this.state,\n          callback: this.callback,\n          continuous,\n          debug,\n          helpers: this.helpers,\n          nonce,\n          shouldScroll: !step.disableScrolling && (index !== 0 || scrollToFirstStep),\n          step,\n          store: this.store\n        }\n      );\n      content.overlay = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(JoyridePortal, { id: \"react-joyride-portal\" }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n        JoyrideOverlay,\n        {\n          ...step,\n          continuous,\n          debug,\n          lifecycle,\n          onClickOverlay: this.handleClickOverlay\n        }\n      ));\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { className: \"react-joyride\" }, content.step, content.overlay);\n  }\n};\n__publicField(Joyride, \"defaultProps\", defaultProps);\nvar components_default = Joyride;\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-joyride/dist/index.mjs\n");

/***/ })

};
;